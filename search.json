[{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jbryer.github.io/IRRsim/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"percent-agreement","dir":"Articles","previous_headings":"","what":"Percent Agreement","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"Percent agreement reliability statistic obtained dividing number observations agreed upon total number observations. easy compute interpret, 70% agreement considered minimum acceptable level. Yet, percent agreement criticized due chance agreement (Hartmann, 1977), .e., proportion agreements observers’ ratings unrelated. Cohen’s Kappa perceived better index accounts chance agreement. Cohen’s Kappa (κ) Cohen’s Kappa can used categorical data two raters. degree agreement two raters taking account chance agreement raters. Kappa values range -1 +1 negative values interpreted systematic disagreement. Although Kappa considered robust estimate IRR, sensitive disagreement raters distribution ratings. Highly skewed ratings lack enough variation ratings result low Kappa values. addition difficulty interpretation Kappa values, criticized Cohen’s Kappa thresholds, especially medical research, low levels Kappa estimates considered acceptable IRR (McHugh, 2012; see Table 2).","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"intraclass-correlation-coefficient-icc","dir":"Articles","previous_headings":"","what":"Intraclass Correlation Coefficient (ICC)","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"Shrout Fleiss (1979) defined six types intraclass correlation coefficients can grouped two categories based form (.e., single rater mean k raters) model (.e., 1-way random effects, 2-way random effects, 2-way fixed effects) ICC (see Table XX definitions, models forms ICC types). type ICC used usually written ICC (m, f) m indicates model f indicates form used. first two models, raters randomly selected larger population, last model, .e., 2-way fixed effects, fixed number raters. first two models generalizability across raters sought. difference first two models ICC (1,1) different raters assess different subjects, however ICC (2,1) raters assess participants. Thus, source statistical variability generalizability across raters influences estimates ICC. average ICC values model ICC (1,1) smaller values ICC (2,1) ICC (3,1) (Orwin, 1994). Koo Li (2015) suggested asking four questions find appropriate version ICC type used. questions whether set raters participants, whether raters randomly selected larger population, whether reliability single rater reliability average raters sought, whether agreement consistency ratings investigated.","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"current-practices-and-guidelines","dir":"Articles","previous_headings":"","what":"Current Practices and Guidelines","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"Many studies report IRR coefficients without specifying research design, index used, statistical analyses (Kottner et al., 2011). incomplete reporting practices contribute misconceptions interpretational difficulty. Several researchers emphasized need consider context determining appropriate thresholds, standards, guidelines. measurements high-stakes, medical healthcare-related field, thresholds higher low-stakes situations. Hence, thresholds cut-points low, moderate, good reliability dependent upon interpretation use scores. addition considering context, different IRR indices different assumptions estimation methods hence design index change, acceptable levels reliability might need change. Current recommendations regarding acceptable thresholds reliability estimates suggest importance considering purposes consequences tests, magnitude error allowed test interpretation decision making (Kottner al., 2011; Trevethan, 2017). reliability analysis function variability allowed research design proposed test use interpretation (AERA, NCME, & APA, 2014). Furthermore, Kottner colleagues (2011) also recommend reporting multiple reliability estimates. case low ICC might due inconsistency raters might reflect lack variability subjects. Thus, reporting different reliability coefficients (e.g. percent agreement) allow readers get meticulous understanding degree reliability. Importantly, research design information number raters, sample characteristics, rating process given detail provide rich information possible. Table 2. Guidelines IRR estimates","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"research-questions","dir":"Articles","previous_headings":"","what":"Research Questions","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"Given different types ICC guidelines interpretation, paper guided following research questions: relationship ICC PRA? published guidelines interpreting ICC appropriate rating designs?","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"method","dir":"Articles","previous_headings":"","what":"Method","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"several designs establishing IRR. generally concerned ratings m subjects k raters. simplest design \\(m x 2\\) two raters score m subjects. However, common education \\(k > 2\\) raters subject scored \\(k_m = 2\\) resulting sparce matrix. Shrout Fleiss (1979) provide guidance six types ICC use depending design (see Table 1). Six versions ICC calculated rating matrix, however noted typically one version ICC appropriate depending scoring design. IRRsim package implements several functions facilitate simulating various scoring designs. simulateRatingMatrix function generate m x k scoring matrix specified desired percent rater agreement. algorithm works follows: scoring event (.e. row) one rater selected random. rater, score randomly selected distribution specified response.probs parameter. specified, uniform distribution used. random number zero one generated. number less equal desired percent rater agreement specified agree parameter, score remaining raters set equal score step two. Otherwise, scores randomly selected distribution specified response.probs parameter remaining raters. \\(k_m < k\\), \\(k - k_m\\) raters row selected scores deleted (.e. set NA). following example demonstrates creating 10 x 6 scoring matrix four scoring levels desired percent rater agreement 60%. many educational contexts, \\(k_m = 2\\). following example simulates scoring matrix retains two scores per scoring event. agreement function calculates percent rater agreement individual scoring matrix. examine relationship percent rater agreement inter-rater reliability statistics, simulate many scoring matrices percent-rater agreements spanning full range values 0% 100%. simulateIRR utilizes simulateRatingMatrix generating many scoring matrices varying percent rater agreements. simulateIRR function example returns object representing 90 rating matrices percent rater agreements ranging 23% 0.97%. Figure 1 generated using plot function represents relationship percent rater agreement six variations ICC Cohen’s Kappa (note Cohen’s Kappa calculated \\(k_m = 2\\)). Figure 1. Inter-rater reliability 4 scoring levels 2 10 raters per scoring event","code":"set.seed(2112) test1 <- IRRsim::simulateRatingMatrix(nLevels = 4,                                        k = 6,                                        k_per_event = 6,                                        agree = 0.6,                                        nEvents = 10) test1 #>    aa ab ac ad ae af #> 1   1  1  1  1  1  1 #> 2   4  4  4  4  4  4 #> 3   4  4  1  4  1  2 #> 4   2  1  2  4  1  4 #> 5   2  2  2  2  2  2 #> 6   2  2  2  2  2  2 #> 7   1  2  3  2  1  4 #> 8   4  1  3  4  2  3 #> 9   2  2  2  2  1  3 #> 10  4  4  4  4  4  4 set.seed(2112) test2 <- IRRsim::simulateRatingMatrix(nLevels = 4,                                        k = 6,                                        k_per_event = 2,                                       agree = 0.6,                                        nEvents = 10) test2 #>    aa ab ac ad ae af #> 1  NA  1 NA  1 NA NA #> 2  NA NA  4 NA NA  4 #> 3  NA NA NA  4  1 NA #> 4   2  1 NA NA NA NA #> 5  NA  2  2 NA NA NA #> 6  NA NA  2  2 NA NA #> 7  NA  2 NA NA NA  4 #> 8  NA  1 NA  4 NA NA #> 9  NA  2 NA  2 NA NA #> 10 NA NA  4 NA NA  4 IRRsim::agreement(test1) #> [1] 0.5 IRRsim::agreement(test2) #> [1] 0.6 test3 <- IRRsim::simulateIRR(nLevels = 4,                              nRaters = 10,                              nRatersPerEvent = 2,                              nEvents = 100,                              nSamples = 10,                              parallel = FALSE,                              showTextProgress = FALSE)"},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"applications-to-educational-designs-k_m-2","dir":"Articles","previous_headings":"Method","what":"Applications to educational designs (\\(k_m = 2\\))","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"educational contexts, common two random raters (.e. \\(k_m = 2\\)) \\(k > 2\\) available raters. scoring design, ICC1 appropriate statistic according Shrout Fleiss (1979). examine impact ICC1 k increases, scoring matrices four scoring levels simulated k equal 6, 9, 12 available raters.","code":"tests.4levels <- IRRsim::simulateIRR(nLevels = 4,                                      nRaters = c(6, 9, 12),                                       nRatersPerEvent = 2)"},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"overall-relationship-between-icc-and-pra","dir":"Articles","previous_headings":"Method","what":"Overall relationship between ICC and PRA","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"explore overall relationship ICC PRA, 374,400 scoring matrices simulated 2 5 scoring levels; 2, 4, 8, 16 raters; uniform, lightly skewed, moderately skewed, highly skewed response distributions; \\(k_m\\) ranging 2 k.1 scoring design, quadratic regression estimated distribution \\(R^2\\) presented.","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"Figure 1 represents relationship PRA ICC (six forms described Table 1) Cohen’s Kappa scoring design 2 random raters 10 available raters uniform response distribution. point represents scoring matrix regression lines (\\(ICC = \\beta_{PRA}^2 + \\beta_{PRA} + B_0\\)) overlayed revealing strong relationship PRA ICC. \\(R^2\\) ranged 0.93 0.94.","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"k_m-2-for-6-9-and-12-raters","dir":"Articles","previous_headings":"Results","what":"\\(k_m = 2\\) for 6, 9, and 12 raters","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"Figure 2 represents relationship PRA ICC1 \\(k_m = 2\\) \\(k\\) 6, 9, 12. also shown Figure 1, strong quadratic relationship PRA ICC1 \\(R^2\\)s 0.94, 0.94, 0.93, respectively. aspects scoring design held constant, ICC1 lower given PRA number available raters increases. example, PRA 75%, ICC1 decreases 0.42 \\(k = 6\\) 0.28 \\(k = 12\\). Figure 2. ICC1 4 scoring levels 2 6, 9, 12 raters per scoring event Cicchetti’s (2001) guidelines.","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"overall-relationship-between-icc-and-pra-1","dir":"Articles","previous_headings":"Results","what":"Overall relationship between ICC and PRA","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"results suggest strong relationship PRA ICC1 PRA accounting 90% variance ICC1. determine relationship holds multiple scoring designs, 374,400 scoring matrices simulated using method described . Table 3 provides mean \\(R^2\\) values six common forms ICC (see Appendix \\(R^2\\) values). case single measure estimates (.e. ICC1, ICC2, ICC3), \\(R^2 > .81\\) designs indicating strong relationship PRA ICC. average measure estimates (.e. ICC1k, ICC2k, ICC3k), relationship weaker \\(k_m\\) approaches \\(k\\). scoring designs \\(k_m < \\frac{k}{2}\\), \\(R^2 > 0.8\\). Moreover, \\(k_m = 2\\) scoring designs common education, one predict ICC PRA vice versa. Table 3. R-Squared values PRA ICC","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"Methodologists consistently argued ICC preferred PRA reporting inter- rater reliability (Hallgren, 2012; Koo & Li, 2016; McGraw & Wong, 1996; Shrout & Fleiss, 1979). Although recommendations interpreting ICC given (Table 2), form ICC (Table 1) recommendations apply specified authors. Furthermore, nature design, especially regard number possible raters, substantial impact magnitude ICC (Figure 2). example, things kept equal, increasing design 2 12 raters changes required PRA 61% 91% achieve Cicchitti’s (2001) “fair” threshold. eight raters, “good” “excellent” reliability achievable design. concur Kottner et al (2011) Koo Li (2016) recommendation design features along multiple IRR statistics reported researchers. Given ease interpretability PRA, may desirable metric rating process. assist researchers determining expected ICC metrics varying PRA scoring designs, IRRsim package includes interactive Shiny (Chang et al, 2018) application can started IRRsim::IRRsim_demo() function (Figure 3). application allows researcher specify parameters scoring design simulate scoring matrices. guidelines presented Table 2 can super imposed plots. Additionally, prediction tables provided providing 95% confidence intervals six types ICC varying PRA intervals. Figure 3. Screenshot IRRsim Shiny application","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"Altman, D. G. (1990). Practical statistics medical research. London: Chapman & Hall/CRC press. American Educational Research Association, American Psychological Association, & National Council Measurement Education, & Joint Committee Standards Educational Psychological Testing. (2014). Standards educational psychological testing. Washington, DC: AERA. Brage, M. E., Rockett, M., Vraney, R., Anderson, R., & Toledano, . (1998). Ankle fracture classification: comparison reliability three x-ray views versus two. Foot & Ankle International, 19(8), 555-562. Chang W., Cheng, J., Allaire, J.J., Xie, Y., & McPherson, J. (2018). shiny: Web Application Framework R. R package version 1.2.0. https://CRAN.R-project.org/package=shiny Cicchetti, D. V. (2001). Methodological Commentary. precision reliability validity estimates re-visited: Distinguishing clinical statistical significance sample size requirements. Journal Clinical Experimental Neuropsychology, 23(5), 695- 700. Cicchetti, D. V., & Sparrow, S. . (1981). Developing criteria establishing interrater reliability specific items: Applications assessment adaptive behavior. American Journal Mental Deficiency, 86(2), 127-137. Fleiss, J. L. (1981). Statistical methods rates proportions. New York: John Wiley & Sons. Fleiss, J. L. (1986). design analysis clinical experiments. New York: Wiley. Hallgren, K. . (2012). Computing inter-rater reliability observational data: overview tutorial. Tutorials Quantitative Methods Psychology, 8(1), 23-34. Koo, T. K., & Li, M. Y. (2016). guideline selecting reporting intraclass correlation coefficients reliability research. Journal Chiropractic Medicine, 15(2), 155-163. Kottner, J., Audigé, L., Brorson, S., Donner, ., Gajewski, B. J., Hróbjartsson, ., … & Streiner, D. L. (2011). Guidelines reporting reliability agreement studies (GRRAS) proposed. International Journal Nursing Studies, 48(6), 661-671. Landis, J. R., & Koch, G. G. (1977). measurement observer agreement categorical data. Biometrics, 33(1), 159-174. Martin, J. S., Marsh, J. L., Bonar, S. K., DeCoster, T. ., Found, E. M., & Brandser, E. . (1997). Assessment AO/ASIF fracture classification distal tibia. Journal Orthopaedic Trauma, 11(7), 477-483. McGraw, K. O., & Wong, S. P. (1996). Forming inferences intraclass correlation coefficients. Psychological Methods, 1(1), 30-46. Portney, L. G., & Watkins, M. P. (2009). Foundations clinical research: applications practice. Upper Saddle River: Pearson/Prentice Hall. Shrout, P. E. (1998). Measurement reliability agreement psychiatry. Statistical Methods Medical Research, 7(3), 301-317. Shrout, P. E., & Fleiss, J. L. (1979). Intraclass correlations: Uses assessing rater reliability. Psychological Bulletin, 86(2), 420-428. Svanholm, H., Starklint, H., Gundersen, H. J. G., Fabricius, J., Barlebo, H., & Olsen, S. (1989). Reproducibility histomorphologic diagnoses special reference kappa statistic. Apmis, 97(7-12), 689-698. Trevethan, R. (2017). Intraclass correlation coefficients: Clearing air, extending cautions, making requests. Health Services Outcomes Research Methodology, 17(2), 127-143. Zegers, M., de Bruijne, M.C., Wagner, C., Groenewegen, P.P., van der Wal, G., de Vet, H.C. (2010). inter-rater agreement retrospective assessments adverse events improve two reviewers per patient record. Journal Clinical Epidemiology, 63(1), 94–102.","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/IRRsim.html","id":"appendix-a-simulation-results","dir":"Articles","previous_headings":"","what":"Appendix A: Simulation Results","title":"Relationship Between Intraclass Correlation (ICC) and Percent Agreement","text":"following tables provide \\(R^2\\) scoring models number scoring levels ranging 2 5, \\(k\\) ranging 2 16, \\(k_m\\) ranging 2 \\(k\\). following regression estimated scoring design: \\[ICC = \\beta_{PRA} + \\beta_{PRA}^2 + \\beta_0\\] Table .1. R-Squared results 2 possible scores per event. Table .2. R-Squared results 2 possible scores per event. Table .3. R-Squared results 2 possible scores per event. Table .4. R-Squared results 2 possible scores per event.","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/LRsim.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Prediction Accuracy with Uncertain Responses","text":"Hewlett Foundations sponsored Kaggle competition 1 advance accuracy automated scoring algorithms. Essay set two (see Appendix ) includes responses 1,800 essays 10th graders rubric scores two domains: writing applications (scores ranging 1 6) language conventions (scores ranging 1 4). essays scored two raters. Given rarity 1s, 5s, 6s domain one 1s domain 2, essays excluded leaving 1,682 essays analysis. LightSIDE (Mayfield & Rosé, 2014) used extract text features essays (.e. unigrams, bigrams, include punctuation, stem N-grams, skip stopwords N-grams). training set consisted 70% essays randomly selected remaining 30% used validation. multinomial log-linear regression model used train two prediction models: using entire training set (full model) using essays two raters agreed (agreement model). nnet (Venables & Ripley, 2002) R (R Core Team, 2019) package used estimate models. accuracy writing applications domain 0.7% worse agreement model better 5.6% accurate language conventions domain (Table 1). Table 1. Prediction accuracy","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/LRsim.html","id":"research-questions","dir":"Articles","previous_headings":"","what":"Research Questions","title":"Prediction Accuracy with Uncertain Responses","text":"Given differences model accuracy differing data, paper guided following research question: impact rater disagreements accuracy predicting scores?","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/LRsim.html","id":"method","dir":"Articles","previous_headings":"","what":"Method","title":"Prediction Accuracy with Uncertain Responses","text":"explore impact lower confidence scores predictive models, data simulated single quantitative predictor variable dichotomous outcome variable. predictor variable, three groups simulated random normal distribution separate means equivalent standard deviations. Group outcome 0, Group B outcome 1, Group Unknown random outcome specified probability outcome (default 50% outcome). Group sizes can specified, \\(n_A = 100\\), \\(n_B = 100\\), \\(n_{unknown} = 50\\) default. simulatePredictionData function IRRsim R package facilitates simulation data matrix. following generate two data frames training validating predictive models. Logistic regression used train two predictive model using glm function R: 1. Using data training set 2. data groups B, thereby excluding uncertain group random outcome. Figure 1 represents distributions predictor variable group separately along fitted logistic regression using data black using groups B orange. fairly large effect predictor standardized difference 1.0 groups B. mean uncertain group example fall middle equal likelihood outcome 0 1. Figure 1. Logistic Regression Plot accuracy predictions using model trained data 62% model trained groups B 63%. simulateLR function facilitate simulating, training, validating many datasets (500 default) parameters.","code":"test1.train <- simulatePredictionData(     mean1 = -0.1, n1 = 100,     mean2 = 0.1, n2 = 100,     mean_unknown = 0.0, n_unknown = 50, ratio_unknown = 0.5,     sd = .2) table(test1.train$Y, test1.train$Group) #>     #>       A   B  NA #>   0 100   0  24 #>   1   0 100  26 test1.valid <- simulatePredictionData(     mean1 = -0.1, n1 = 100,     mean2 = 0.1, n2 = 100,     mean_unknown = 0.0, n_unknown = 50, ratio_unknown = 0.5,     sd = 0.2) table(test1.valid$Y, test1.valid$Group) #>     #>       A   B  NA #>   0 100   0  22 #>   1   0 100  28 uncertain_label <- attr(test1.valid, 'labels')[3] test1.lr.full <- glm(Y ~ X,                       data = test1.train,                       family = binomial(link = 'logit')) test1.lr.known <- glm(Y ~ X,                        data = test1.train[test1.train$Group != uncertain_label,],                        family = binomial(link = 'logit')) test1.valid$Fitted.Full <- predict(test1.lr.full, newdata = test1.valid) test1.valid$Fitted.Known <- predict(test1.lr.known, newdata = test1.valid) test1 <- simulatePredictionModels(     mean1 = -0.1, n1 = 100,     mean2 = 0.1, n2 = 100,     mean_unknown = 0.0, n_unknown = 50, ratio_unknown = 0.5,     sd = .2)"},{"path":"https://jbryer.github.io/IRRsim/articles/LRsim.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Prediction Accuracy with Uncertain Responses","text":"Figure 2 histogram differences prediction accuracies validation dataset models trained data minus models trained excluding disagreements. average, training model agreement scores resulted increase accuracy 1.17%. Figure 2. Distribution differences prediction accuracies.","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/LRsim.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Prediction Accuracy with Uncertain Responses","text":"reliability measures used predictive modeling important contributor overall accuracy model. inclusion exclusion data training datasets important consideration researhers practioners. impact disagreement, uncertain scores accuracy predictive models vary depending data available. assist practioners estimatin impact uncertain scores accuracy predictive models, R Shiny (Chang et al, 2019) application developed (Figure 3).2 application simulates many datasets using parameters specified user providing model accuracy estimates using agreement data. Figure 3. Screenshot prediction model simulation Shiny application","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/LRsim.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Prediction Accuracy with Uncertain Responses","text":"Borray, . (2017). Predicting Student Success Big Data. EducauseReview. Retrieved https://er.educause.edu/blogs/2017/4/predicting-student-success--big-data Chang, W., Cheng, J., Allaire, J.J., Xie, Y. & McPherson, J. (2019). shiny: Web Application Framework R. R package version 1.3.2. Mayfield, E., & Rosé, C.P. (2014). LightSIDE: Open source machine learning. M.D. Shermis J. Burstein (Eds.), Handbook Automated Essay Evaluation: Current Applications New Directions (pp. 124-135). New York: Routledge. Moskal, B.M., & Leydens, J.. (2000). Scoring rubric development: Validity reliability. Practical Assessment, Research, & Evaluation, 7(10). R Core Team (2019). R: language environment statistical computing. R Foundation Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. Shermis, M.D., & Hamner, B. (2012). Contrasting state---art automated scoring essays: analysis. Paper presented National Council Measurements Education, 2012, Vancouver, BC. Venables, W. N. & Ripley, B. D. (2002), Modern Applied Statistics S. Fourth Edition. Springer, New York.","code":""},{"path":"https://jbryer.github.io/IRRsim/articles/LRsim.html","id":"appendix-a-essay-prompt-and-rubric","dir":"Articles","previous_headings":"","what":"Appendix A: Essay Prompt and Rubric","title":"Prediction Accuracy with Uncertain Responses","text":"Essay Prompt Censorship Libraries “us can think book hope none children children taken shelf. right remove book shelf – work abhor – also exactly right everyone else. books left shelf us.” –Katherine Paterson, Author Write persuasive essay newspaper reflecting vies censorship libraries. believe certain materials, books, music, movies, magazines, etc., removed shelves found offensive? Support position convincing arguments experience, observations, /reading. Scoring Rubric","code":""},{"path":"https://jbryer.github.io/IRRsim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason Bryer. Author, maintainer.","code":""},{"path":"https://jbryer.github.io/IRRsim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryer J (2023). IRRsim: Simulate Inter-Rater Reliability Statistics. http://irrsim.bryer.org, http://github.com/jbryer/IRRsim, https://jbryer.github.io/IRRsim/.","code":"@Manual{,   title = {IRRsim: Simulate Inter-Rater Reliability Statistics},   author = {Jason Bryer},   year = {2023},   note = {http://irrsim.bryer.org, http://github.com/jbryer/IRRsim, https://jbryer.github.io/IRRsim/}, }"},{"path":"https://jbryer.github.io/IRRsim/index.html","id":"irrsim-an-r-package-for-simulating-inter-rater-reliability","dir":"","previous_headings":"","what":"Simulate Inter-Rater Reliability Statistics","title":"Simulate Inter-Rater Reliability Statistics","text":"package provides functions shiny application simulate inter-rater reliability statistics based various scoring response models. initial motivation package understand relationship percent rater agreement intraclass correlation. Documentation available http://irrsim.bryer.org Slides NCME 2019 talk : http://irrsim.bryer.org/IRRsim-Presentation.html","code":""},{"path":"https://jbryer.github.io/IRRsim/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Simulate Inter-Rater Reliability Statistics","text":"development version IRRsim can downloaded Github using devtools package:","code":"devtools::install_github('jbryer/IRRsim')"},{"path":"https://jbryer.github.io/IRRsim/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny App","title":"Simulate Inter-Rater Reliability Statistics","text":"Many features package can explored using included shiny applications. IRRsim_shiny() function run application. IRRsim Shiny App","code":"IRRsim::IRRsim_demo()"},{"path":"https://jbryer.github.io/IRRsim/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Simulate Inter-Rater Reliability Statistics","text":"analysis done vignette requires large number simulated datasets. take long time datasets generated, file sizes exceed allowed R packages. data stored Github releases. See data-releases/IRRsimulations.R R script data files generated. Alternatively, can download data using following commands R:","code":"download_dir <- getwd() download.file('https://github.com/jbryer/IRRsim/releases/download/IRRsimData/IRRsimData.rda',                paste0(download_dir, '/IRRsimData.rda')) load(paste0(download_dir, '/IRRsimData.rda))"},{"path":"https://jbryer.github.io/IRRsim/reference/IRRguidelines.html","id":null,"dir":"Reference","previous_headings":"","what":"Guidelines for interpreting inter-rater reliability statistics. — IRRguidelines","title":"Guidelines for interpreting inter-rater reliability statistics. — IRRguidelines","text":"Guidelines interpreting inter-rater reliability statistics.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/IRRguidelines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guidelines for interpreting inter-rater reliability statistics. — IRRguidelines","text":"","code":"data(IRRguidelines)"},{"path":"https://jbryer.github.io/IRRsim/reference/IRRguidelines.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Guidelines for interpreting inter-rater reliability statistics. — IRRguidelines","text":"List object numeric vectors containing thresholds         interpreting IRR statistics. names vectors correspond         labels use authors. name List object corresponds         first author's name. See vignette information.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/IRRguidelines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guidelines for interpreting inter-rater reliability statistics. — IRRguidelines","text":"","code":"data(IRRguidelines) names(IRRguidelines) # Names of the guidelines #> [1] \"Altman\"              \"Cicchetti\"           \"Fleiss\"              #> [4] \"Koo and Li\"          \"Landis and Koch\"     \"Portney and Watkins\" #> [7] \"Shrout\"              IRRguidelines[['Cicchetti']] # Cicchetti's (1994) guidelines #> $breaks #>      Poor      Fair      Good Excellent  #>      0.00      0.40      0.60      0.75  #>  #> $metrics #> [1] \"ICC\"         \"Cohen Kappa\" #>  #> $reference #> [1] \"Cicchetti & Sparrow (1981); Cicchetti (2001)\" #>"},{"path":"https://jbryer.github.io/IRRsim/reference/IRRsim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Inter-Rater Reliability Statistics — IRRsim-package","title":"Simulate Inter-Rater Reliability Statistics — IRRsim-package","text":"Simulate Inter-Rater Reliability Statistics","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/IRRsim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Inter-Rater Reliability Statistics — IRRsim-package","text":"jason@bryer.org","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/IRRsim_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Inter-Rater Reliability shiny app. — IRRsim_demo","title":"Run the Inter-Rater Reliability shiny app. — IRRsim_demo","text":"Run Inter-Rater Reliability shiny app.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/IRRsim_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Inter-Rater Reliability shiny app. — IRRsim_demo","text":"","code":"IRRsim_demo(clean = FALSE)"},{"path":"https://jbryer.github.io/IRRsim/reference/IRRsim_demo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Inter-Rater Reliability shiny app. — IRRsim_demo","text":"clean `TRUE` cache file deleted application finishes.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/LRsim_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the logistic regression shiny app. — LRsim_demo","title":"Run the logistic regression shiny app. — LRsim_demo","text":"Run logistic regression shiny app.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/LRsim_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the logistic regression shiny app. — LRsim_demo","text":"","code":"LRsim_demo()"},{"path":"https://jbryer.github.io/IRRsim/reference/agreement.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate percent agreement. — agreement","title":"Calculate percent agreement. — agreement","text":"Calculate percent agreement.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/agreement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate percent agreement. — agreement","text":"","code":"agreement(thedata)"},{"path":"https://jbryer.github.io/IRRsim/reference/agreement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate percent agreement. — agreement","text":"thedata rating matrix.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/as.data.frame.IRRsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts the results of simulateIRR to a data.frame — as.data.frame.IRRsim","title":"Converts the results of simulateIRR to a data.frame — as.data.frame.IRRsim","text":"function create data frame IRR metrics combiend.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/as.data.frame.IRRsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts the results of simulateIRR to a data.frame — as.data.frame.IRRsim","text":"","code":"# S3 method for IRRsim as.data.frame(x, ...)"},{"path":"https://jbryer.github.io/IRRsim/reference/as.data.frame.IRRsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts the results of simulateIRR to a data.frame — as.data.frame.IRRsim","text":"x result simulateIRR. ... currently unused.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/asap2.html","id":null,"dir":"Reference","previous_headings":"","what":"Automated Student Assessment Prize Dataset 2 — asap2","title":"Automated Student Assessment Prize Dataset 2 — asap2","text":"Data Kaggle Automated Essay Scoring (AES) competition. essay set 2 used following prompt:","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/asap2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automated Student Assessment Prize Dataset 2 — asap2","text":"","code":"asap2"},{"path":"https://jbryer.github.io/IRRsim/reference/asap2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Automated Student Assessment Prize Dataset 2 — asap2","text":"object class tbl_df (inherits tbl, data.frame) 1800 rows 8 columns.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/asap2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automated Student Assessment Prize Dataset 2 — asap2","text":"\"us can think book hope none children children taken shelf. right remove book shelf -- work abhor -- also exactly right everyone else. books left shelf us.\" --Katherine Paterson, Author Write persuasive essay newspaper reflecting vies censorship libraries. believe certain materials, books, music, movies, magazines, etc., removed shelves found offensive? Support position convincing arguments experience, observations, /reading. data frame following variables: essay_id unique identifier individual student essay rater1_domain1 Rater 1's domain 1 score rater2_domain1 Rater 2's domain 1 score domain1_score Resolved score raters rater1_domain2 Rater 1's domain 2 score rater2_domain2 Rater 2's domain 2 score domain2_score Resolved score raters essay ascii text student's response information available : https://www.kaggle.com/c/asap-aes/data","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/asap2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automated Student Assessment Prize Dataset 2 — asap2","text":"","code":"data(asap2)"},{"path":"https://jbryer.github.io/IRRsim/reference/kappam.fleiss2.html","id":null,"dir":"Reference","previous_headings":"","what":"Fleiss' Kappa for m raters — kappam.fleiss2","title":"Fleiss' Kappa for m raters — kappam.fleiss2","text":"function fixes issue kappam.fleiss function irr package. Specifically, original function removes missing values. However, many rating designs raters score essays. function still calculate Fleiss' Kappa situations.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/kappam.fleiss2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fleiss' Kappa for m raters — kappam.fleiss2","text":"","code":"kappam.fleiss2(ratings, exact = FALSE, detail = FALSE)"},{"path":"https://jbryer.github.io/IRRsim/reference/kappam.fleiss2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fleiss' Kappa for m raters — kappam.fleiss2","text":"ratings n*m matrix dataframe, n subjecs m raters. exact logical indicating whether exact Kappa (Conger, 1980) Kappa described Fleiss (1971) computed. detail logical indicating whether category-wise Kappas computed","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/kappam.fleiss2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fleiss' Kappa for m raters — kappam.fleiss2","text":"See irr::kappam.fleis information.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/plot.IRRsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the results of an IRR simulation. — plot.IRRsim","title":"Plot the results of an IRR simulation. — plot.IRRsim","text":"Returns ggplot2 expression.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/plot.IRRsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the results of an IRR simulation. — plot.IRRsim","text":"","code":"# S3 method for IRRsim plot(x, method = \"loess\", stat, point.alpha = 0.3, title = TRUE, ...)"},{"path":"https://jbryer.github.io/IRRsim/reference/plot.IRRsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the results of an IRR simulation. — plot.IRRsim","text":"x result simulateIRR. method method used find predicted values. Possible values loess, linear, quadratic. stat IRR statistic return summary , \"\" metrics. point.alpha alpha used points. title title plot ... currently unused.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/plot.lrdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic Regression Plot — plot.lrdf","title":"Logistic Regression Plot — plot.lrdf","text":"Logistic Regression Plot","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/plot.lrdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Regression Plot — plot.lrdf","text":"","code":"# S3 method for lrdf plot(   x,   colors = c(\"#1b9e77\", \"#7570b3\", \"#d95f02\"),   rel_heights = c(0.4, 0.6),   title,   ... )"},{"path":"https://jbryer.github.io/IRRsim/reference/plot.lrdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic Regression Plot — plot.lrdf","text":"x results simulatePredictionData. colors color scheme used three groups. rel_heights relative heights histogram scatter plot. title title plot. ... parameters passed cowplot::plot_grid.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/plot.lrdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic Regression Plot — plot.lrdf","text":"ggplot2 plot logistic regression results.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/print.IRRsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints the results from `simulateIRR.` — print.IRRsim","title":"Prints the results from `simulateIRR.` — print.IRRsim","text":"Prints results `simulateIRR.`","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/print.IRRsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints the results from `simulateIRR.` — print.IRRsim","text":"","code":"# S3 method for IRRsim print(x, ...)"},{"path":"https://jbryer.github.io/IRRsim/reference/print.IRRsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints the results from `simulateIRR.` — print.IRRsim","text":"x results IRRsim::simulateIRR(). ... currently unused.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/print.IRRsimSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the result of summary.IRRsim — print.IRRsimSummary","title":"Print the result of summary.IRRsim — print.IRRsimSummary","text":"[IRRsim::summary.IRRsimm()] return list model summary objects. former results modeling function, latter data.frame summarizes predicted results model. function print data.frame.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/print.IRRsimSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the result of summary.IRRsim — print.IRRsimSummary","text":"","code":"# S3 method for IRRsimSummary print(x, ...)"},{"path":"https://jbryer.github.io/IRRsim/reference/print.IRRsimSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the result of summary.IRRsim — print.IRRsimSummary","text":"x results [IRRsim::summary.IRRsim()] ... currently unused.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulateIRR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates intraclass correlations (ICC) for simulated samples of raters and\nevaluations. — simulateIRR","title":"Calculates intraclass correlations (ICC) for simulated samples of raters and\nevaluations. — simulateIRR","text":"Calculates intraclass correlations (ICC) simulated samples raters evaluations.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulateIRR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates intraclass correlations (ICC) for simulated samples of raters and\nevaluations. — simulateIRR","text":"","code":"simulateIRR(   nRaters = c(2),   nRatersPerEvent = nRaters,   nLevels = 4,   nEvents = 100,   nSamples = 100,   agreements = seq(0.1, 0.9, by = 0.1),   response.probs = rep(1/nLevels, nLevels),   showShinyProgress = FALSE,   showTextProgress = !showShinyProgress,   numCores = (parallel::detectCores() - 1),   parallel = (numCores > 1),   ... )"},{"path":"https://jbryer.github.io/IRRsim/reference/simulateIRR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates intraclass correlations (ICC) for simulated samples of raters and\nevaluations. — simulateIRR","text":"nRaters number available raters nRatersPerEvent number ratings per scoring event. nLevels number possible outcomes rating. nEvents number rating events within matrix. nSamples number sample matrices estimate agreement level. agreements vector percent agreements simulate. response.probs probability weights distribution scores. See simulateRatingMatrix information. showShinyProgress show progress bar simulations generated. showTextProgress show progress bar simulations generated. numCores number cores use simulation run parallel. parallel whether simulated data using multiple cores. ... parameters.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulateIRR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates intraclass correlations (ICC) for simulated samples of raters and\nevaluations. — simulateIRR","text":"list length nSamples * length(nRaters) * length(agreements).        element list represents one simulation following        values: k number raters used simulation. simAgreement calculated percent agreement sample. agreement specified percent agreement used drawing random sample. skewness skewness responses. kurtosis Kurtosis responses. MaxResponseDiff difference least freqeuent responses. ICC1 ICC1 described Shrout Fleiss (1979) ICC2 ICC2 described Shrout Fleiss (1979) ICC3 ICC3 described Shrout Fleiss (1979) ICC1k ICC1k described Shrout Fleiss (1979) ICC2k ICC2k described Shrout Fleiss (1979) ICC3k ICC3k described Shrout Fleiss (1979) Fleiss_Kappa Fleiss' Kappa m raters described Fleiss (1971). Cohen_Kappa Cohen's Kappa calculated psych::cohen.kappa. Note              calculated datasets even though appropriate two raters. data simulated matrix","code":""},{"path":[]},{"path":"https://jbryer.github.io/IRRsim/reference/simulateIRR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates intraclass correlations (ICC) for simulated samples of raters and\nevaluations. — simulateIRR","text":"","code":"icctest <- simulateIRR(nLevels = 3,                        nRaters = 2,                        nSamples = 10,                        parallel = FALSE,                        showTextProgress = FALSE) summary(icctest) #> Prediction table for 2 raters. #>   Agreement     skewness  kurtosis MaxResponseDiff       ICC1      ICC2 #> 1       0.1           NA        NA              NA         NA        NA #> 2       0.2           NA        NA              NA         NA        NA #> 3       0.3           NA        NA              NA         NA        NA #> 4       0.4  0.020362755 -1.512268      0.05486816 0.09134718 0.0933687 #> 5       0.5 -0.009128379 -1.519546      0.06268751 0.26558089 0.2649295 #> 6       0.6 -0.004295300 -1.504876      0.05405440 0.41470561 0.4146315 #> 7       0.7  0.008207439 -1.476125      0.05572903 0.54817293 0.5483132 #> 8       0.8  0.020497984 -1.463191      0.05758375 0.69590574 0.6961496 #> 9       0.9  0.039329936 -1.493948      0.04060290 0.84669100 0.8466955 #>         ICC3     ICC1k     ICC2k     ICC3k Cohen_Kappa #> 1         NA        NA        NA        NA          NA #> 2         NA        NA        NA        NA          NA #> 3         NA        NA        NA        NA          NA #> 4 0.09340692 0.1558434 0.1600041 0.1599984  0.09788753 #> 5 0.26463425 0.4135256 0.4124168 0.4121388  0.24752707 #> 6 0.41423052 0.5873882 0.5874445 0.5871060  0.39827390 #> 7 0.54893336 0.7061916 0.7062874 0.7067206  0.54787590 #> 8 0.69701401 0.8202415 0.8204216 0.8210625  0.69771132 #> 9 0.84652172 0.9170584 0.9170659 0.9169797  0.84890275 #>"},{"path":"https://jbryer.github.io/IRRsim/reference/simulatePredictionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data to test logistic regression. — simulatePredictionData","title":"Simulate data to test logistic regression. — simulatePredictionData","text":"Simulate data test logistic regression.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulatePredictionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data to test logistic regression. — simulatePredictionData","text":"","code":"simulatePredictionData(   mean1 = -0.1,   n1 = 100,   mean2 = -mean1,   n2 = n1,   mean_unknown = (mean1 + mean2)/2,   n_unknown = round(n1/2),   ratio_unknown = 0.5,   sd = 0.2,   group_labels = c(\"A\", \"B\", \"NA\") )"},{"path":"https://jbryer.github.io/IRRsim/reference/simulatePredictionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data to test logistic regression. — simulatePredictionData","text":"mean1 mean group 1. n1 size group 1. mean2 mean group 2. n2 size group 2. mean_unknown mean group random outcome. n_unknown size group random outcome. ratio_unknown probability outcome 1 occurring random group. sd standard deviation group (.e. parameter passed rnorm). Variance assumed equal across groups. group_labels labels groups data.frame.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulatePredictionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data to test logistic regression. — simulatePredictionData","text":"data.frame n1 + n2 + n_unknown rows 3        variables (Group, X, Y).","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulatePredictionModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation for estimating logistic regression with uncertain responses. — simulatePredictionModels","title":"Simulation for estimating logistic regression with uncertain responses. — simulatePredictionModels","text":"Simulation estimating logistic regression uncertain responses.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulatePredictionModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation for estimating logistic regression with uncertain responses. — simulatePredictionModels","text":"","code":"simulatePredictionModels(nSamples = 500, ...)"},{"path":"https://jbryer.github.io/IRRsim/reference/simulatePredictionModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation for estimating logistic regression with uncertain responses. — simulatePredictionModels","text":"nSamples number random datasets simulate. ... parameters passed simulatePredictionData.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulatePredictionModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation for estimating logistic regression with uncertain responses. — simulatePredictionModels","text":"data frame nSamples rows columns         predictive model accuracy.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulateRatingMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a rating matrix. — simulateRatingMatrix","title":"Simulate a rating matrix. — simulateRatingMatrix","text":"function generate nEvents x k scoring matrix.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulateRatingMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a rating matrix. — simulateRatingMatrix","text":"","code":"simulateRatingMatrix(   nLevels,   k,   k_per_event = 2,   agree,   nEvents = 100,   response.probs = rep(1/nLevels, nLevels) )"},{"path":"https://jbryer.github.io/IRRsim/reference/simulateRatingMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a rating matrix. — simulateRatingMatrix","text":"nLevels number possible outcomes rating. k total number available raters. k_per_event number raters per scoring event. agree percent time raters agree. Note actual agreement simulated matrix vary value (see sample). nEvents number rating events within matrix. response.probs probability weights distribution scores. default, levels equal probability selected. allows situations responses common others (e.g. 50% students get 3, 30% get 2, 20% get 1). independent percent agreement parameter.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulateRatingMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a rating matrix. — simulateRatingMatrix","text":"","code":"test <- simulateRatingMatrix(nLevels = 3, k = 2, agree = 0.6, nEvents = 100) psych::ICC(test) #> Call: psych::ICC(x = test) #>  #> Intraclass correlation coefficients  #>                          type  ICC   F df1 df2       p lower bound upper bound #> Single_raters_absolute   ICC1 0.56 3.6  99 100 3.7e-10        0.41        0.68 #> Single_random_raters     ICC2 0.56 3.6  99  99 3.7e-10        0.41        0.68 #> Single_fixed_raters      ICC3 0.57 3.6  99  99 3.7e-10        0.42        0.69 #> Average_raters_absolute ICC1k 0.72 3.6  99 100 3.7e-10        0.59        0.81 #> Average_random_raters   ICC2k 0.72 3.6  99  99 3.7e-10        0.59        0.81 #> Average_fixed_raters    ICC3k 0.72 3.6  99  99 3.7e-10        0.59        0.81 #>  #>  Number of subjects = 100     Number of Judges =  2 #> See the help file for a discussion of the other 4 McGraw and Wong estimates,"},{"path":"https://jbryer.github.io/IRRsim/reference/simulateRatingMatrix2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a rating matrix with two ratings per event. — simulateRatingMatrix2","title":"Simulate a rating matrix with two ratings per event. — simulateRatingMatrix2","text":"alternative implementation simulateRatingMatrix function event two ratings k available raters. event, one rater randomly selected given rating distribution defined response.probs parameter. second randomly selected rater rating probability defined  agree parameter.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/simulateRatingMatrix2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a rating matrix with two ratings per event. — simulateRatingMatrix2","text":"","code":"simulateRatingMatrix2(   nLevels,   k,   agree,   nEvents = 100,   response.probs = rep(1/nLevels, nLevels) )"},{"path":"https://jbryer.github.io/IRRsim/reference/simulateRatingMatrix2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a rating matrix with two ratings per event. — simulateRatingMatrix2","text":"nLevels number possible outcomes rating. k total number available raters. agree percent time raters agree. Note actual agreement simulated matrix vary value (see sample). nEvents number rating events within matrix. response.probs probability weights distribution scores. default, levels equal probability selected. allows situations responses common others (e.g. 50% students get 3, 30% get 2, 20% get 1). independent percent agreement parameter.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/summary.IRRsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a summary of a IRR simulation. — summary.IRRsim","title":"Returns a summary of a IRR simulation. — summary.IRRsim","text":"function provide predicted IRR statistics various percent agreements. two elements returned list: `model` `summary`. former results modeling function latter data.frame providing predicted values various percent agreements. `stat = ''` specified, summary table contains predicted values. specific IRR statistic specified, summary table contains predicted value along interval.","code":""},{"path":"https://jbryer.github.io/IRRsim/reference/summary.IRRsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a summary of a IRR simulation. — summary.IRRsim","text":"","code":"# S3 method for IRRsim summary(   object,   method = \"loess\",   agreements = seq(0.1, 0.9, by = 0.1),   stat,   k,   predict.interval = \"confidence\",   ... )"},{"path":"https://jbryer.github.io/IRRsim/reference/summary.IRRsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a summary of a IRR simulation. — summary.IRRsim","text":"object result IRRsim::simulateIRR(). method method used find predicted values. Possible values loess, linear, quadratic. agreements vector percent agreements include summary table. stat IRR statistic return summary , missing metrics. k number raters print summary . predict.interval Type interval calculation. Can none, confidence, .       prediction. ... currently unused.","code":""}]
